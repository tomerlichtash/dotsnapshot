name: Build Cross-Platform Binaries

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag to build cross-platform binaries for'
        required: true
        default: 'v1.2.0'

permissions:
  contents: write

jobs:
  build-binaries:
    name: Build Release Binaries
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: dotsnapshot
            asset_name: dotsnapshot-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: dotsnapshot.exe
            asset_name: dotsnapshot-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: dotsnapshot
            asset_name: dotsnapshot-macos-x86_64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.release_tag }}

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/registry/git/db/
          target/
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}

    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Package binary for distribution
      run: |
        cd target/${{ matrix.target }}/release
        if [ "${{ runner.os }}" = "Windows" ]; then
          7z a ../../../${{ matrix.asset_name }}.zip ${{ matrix.artifact_name }}
        else
          tar -czf ../../../${{ matrix.asset_name }}.tar.gz ${{ matrix.artifact_name }}
        fi
        cd ../../..

    - name: Generate checksums
      run: |
        if [ "${{ runner.os }}" = "Windows" ]; then
          certutil -hashfile ${{ matrix.asset_name }}.zip SHA256 > ${{ matrix.asset_name }}.sha256
        else
          shasum -a 256 ${{ matrix.asset_name }}.tar.gz > ${{ matrix.asset_name }}.sha256
        fi

    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.event.inputs.release_tag }}
        files: |
          ${{ matrix.asset_name }}.*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}